// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aws-pricing.proto

/*
Package aws_pricing is a generated protocol buffer package.

It is generated from these files:
	aws-pricing.proto

It has these top-level messages:
	LineItem
*/
package bo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LineItem struct {
	IdentityLineItemID            string `protobuf:"bytes,1,opt,name=IdentityLineItemID" json:"IdentityLineItemID,omitempty"`
	IdentityTimeInterval          string `protobuf:"bytes,2,opt,name=IdentityTimeInterval" json:"IdentityTimeInterval,omitempty"`
	BillInvoiceID                 string `protobuf:"bytes,3,opt,name=BillInvoiceID" json:"BillInvoiceID,omitempty"`
	BillBillingEntity             string `protobuf:"bytes,4,opt,name=BillBillingEntity" json:"BillBillingEntity,omitempty"`
	BillBillType                  string `protobuf:"bytes,5,opt,name=BillBillType" json:"BillBillType,omitempty"`
	BillPayerAccountID            string `protobuf:"bytes,6,opt,name=BillPayerAccountID" json:"BillPayerAccountID,omitempty"`
	BillBillingPeriodStartDate    string `protobuf:"bytes,7,opt,name=BillBillingPeriodStartDate" json:"BillBillingPeriodStartDate,omitempty"`
	BillBillingPeriodEndDate      string `protobuf:"bytes,8,opt,name=BillBillingPeriodEndDate" json:"BillBillingPeriodEndDate,omitempty"`
	LineItemUsageAccountID        string `protobuf:"bytes,9,opt,name=LineItemUsageAccountID" json:"LineItemUsageAccountID,omitempty"`
	LineItemLineItemType          string `protobuf:"bytes,10,opt,name=LineItemLineItemType" json:"LineItemLineItemType,omitempty"`
	LineItemUsageStartDate        string `protobuf:"bytes,11,opt,name=LineItemUsageStartDate" json:"LineItemUsageStartDate,omitempty"`
	LineItemUsageEndDate          string `protobuf:"bytes,12,opt,name=LineItemUsageEndDate" json:"LineItemUsageEndDate,omitempty"`
	LineItemProductCode           string `protobuf:"bytes,13,opt,name=LineItemProductCode" json:"LineItemProductCode,omitempty"`
	LineItemUsageType             string `protobuf:"bytes,14,opt,name=LineItemUsageType" json:"LineItemUsageType,omitempty"`
	LineItemOperation             string `protobuf:"bytes,15,opt,name=LineItemOperation" json:"LineItemOperation,omitempty"`
	LineItemAvailabilityZone      string `protobuf:"bytes,16,opt,name=LineItemAvailabilityZone" json:"LineItemAvailabilityZone,omitempty"`
	LineItemResourceID            string `protobuf:"bytes,17,opt,name=LineItemResourceID" json:"LineItemResourceID,omitempty"`
	LineItemUsageAmount           string `protobuf:"bytes,18,opt,name=LineItemUsageAmount" json:"LineItemUsageAmount,omitempty"`
	LineItemNormalizationFactor   string `protobuf:"bytes,19,opt,name=LineItemNormalizationFactor" json:"LineItemNormalizationFactor,omitempty"`
	LineItemNormalizedUsageAmount string `protobuf:"bytes,20,opt,name=LineItemNormalizedUsageAmount" json:"LineItemNormalizedUsageAmount,omitempty"`
	LineItemCurrencyCode          string `protobuf:"bytes,21,opt,name=LineItemCurrencyCode" json:"LineItemCurrencyCode,omitempty"`
	LineItemUnblendedRate         string `protobuf:"bytes,22,opt,name=LineItemUnblendedRate" json:"LineItemUnblendedRate,omitempty"`
	LineItemUnblendedCost         string `protobuf:"bytes,23,opt,name=LineItemUnblendedCost" json:"LineItemUnblendedCost,omitempty"`
	LineItemBlendedRate           string `protobuf:"bytes,24,opt,name=LineItemBlendedRate" json:"LineItemBlendedRate,omitempty"`
	LineItemBlendedCost           string `protobuf:"bytes,25,opt,name=LineItemBlendedCost" json:"LineItemBlendedCost,omitempty"`
	LineItemLineItemDescription   string `protobuf:"bytes,26,opt,name=LineItemLineItemDescription" json:"LineItemLineItemDescription,omitempty"`
	LineItemTaxType               string `protobuf:"bytes,27,opt,name=LineItemTaxType" json:"LineItemTaxType,omitempty"`
	NormalizedUnitsPerReservation string `protobuf:"bytes,28,opt,name=NormalizedUnitsPerReservation" json:"NormalizedUnitsPerReservation,omitempty"`
	TotalReservedNormalizedUnits  string `protobuf:"bytes,29,opt,name=TotalReservedNormalizedUnits" json:"TotalReservedNormalizedUnits,omitempty"`
	TotalReservedUnits            string `protobuf:"bytes,30,opt,name=TotalReservedUnits" json:"TotalReservedUnits,omitempty"`
	UnitsPerReservation           string `protobuf:"bytes,31,opt,name=UnitsPerReservation" json:"UnitsPerReservation,omitempty"`
	PublicOnDemandCost            string `protobuf:"bytes,32,opt,name=PublicOnDemandCost" json:"PublicOnDemandCost,omitempty"`
	PublicOnDemandRate            string `protobuf:"bytes,33,opt,name=PublicOnDemandRate" json:"PublicOnDemandRate,omitempty"`
	Term                          string `protobuf:"bytes,34,opt,name=Term" json:"Term,omitempty"`
	Unit                          string `protobuf:"bytes,35,opt,name=Unit" json:"Unit,omitempty"`
	ProductName                   string `protobuf:"bytes,36,opt,name=ProductName" json:"ProductName,omitempty"`
	Availability                  string `protobuf:"bytes,37,opt,name=Availability" json:"Availability,omitempty"`
	ClockSpeed                    string `protobuf:"bytes,38,opt,name=ClockSpeed" json:"ClockSpeed,omitempty"`
	CurrentGeneration             string `protobuf:"bytes,39,opt,name=CurrentGeneration" json:"CurrentGeneration,omitempty"`
	Durability                    string `protobuf:"bytes,40,opt,name=Durability" json:"Durability,omitempty"`
	Ecu                           string `protobuf:"bytes,41,opt,name=Ecu" json:"Ecu,omitempty"`
	FromLocation                  string `protobuf:"bytes,42,opt,name=FromLocation" json:"FromLocation,omitempty"`
	FromLocationType              string `protobuf:"bytes,43,opt,name=FromLocationType" json:"FromLocationType,omitempty"`
	Group                         string `protobuf:"bytes,44,opt,name=Group" json:"Group,omitempty"`
	GroupDescription              string `protobuf:"bytes,45,opt,name=GroupDescription" json:"GroupDescription,omitempty"`
	InstanceFamily                string `protobuf:"bytes,46,opt,name=InstanceFamily" json:"InstanceFamily,omitempty"`
	InstanceType                  string `protobuf:"bytes,47,opt,name=InstanceType" json:"InstanceType,omitempty"`
	InstanceTypeFamily            string `protobuf:"bytes,48,opt,name=InstanceTypeFamily" json:"InstanceTypeFamily,omitempty"`
	LicenseModel                  string `protobuf:"bytes,49,opt,name=LicenseModel" json:"LicenseModel,omitempty"`
	Location                      string `protobuf:"bytes,50,opt,name=Location" json:"Location,omitempty"`
	LocationType                  string `protobuf:"bytes,51,opt,name=LocationType" json:"LocationType,omitempty"`
	MaxIopsBurstPerformance       string `protobuf:"bytes,52,opt,name=MaxIopsBurstPerformance" json:"MaxIopsBurstPerformance,omitempty"`
	MaxIopsvolume                 string `protobuf:"bytes,53,opt,name=MaxIopsvolume" json:"MaxIopsvolume,omitempty"`
	MaxThroughputvolume           string `protobuf:"bytes,54,opt,name=MaxThroughputvolume" json:"MaxThroughputvolume,omitempty"`
	MaxVolumeSize                 string `protobuf:"bytes,55,opt,name=MaxVolumeSize" json:"MaxVolumeSize,omitempty"`
	Memory                        string `protobuf:"bytes,56,opt,name=Memory" json:"Memory,omitempty"`
	NetworkPerformance            string `protobuf:"bytes,57,opt,name=NetworkPerformance" json:"NetworkPerformance,omitempty"`
	NormalizationSizeFactor       string `protobuf:"bytes,58,opt,name=NormalizationSizeFactor" json:"NormalizationSizeFactor,omitempty"`
	OperatingSystem               string `protobuf:"bytes,59,opt,name=OperatingSystem" json:"OperatingSystem,omitempty"`
	Operation                     string `protobuf:"bytes,60,opt,name=Operation" json:"Operation,omitempty"`
	PhysicalProcessor             string `protobuf:"bytes,61,opt,name=PhysicalProcessor" json:"PhysicalProcessor,omitempty"`
	PreInstalledSw                string `protobuf:"bytes,62,opt,name=PreInstalledSw" json:"PreInstalledSw,omitempty"`
	ProcessorArchitecture         string `protobuf:"bytes,63,opt,name=ProcessorArchitecture" json:"ProcessorArchitecture,omitempty"`
	ProcessorFeatures             string `protobuf:"bytes,64,opt,name=ProcessorFeatures" json:"ProcessorFeatures,omitempty"`
	ProductFamily                 string `protobuf:"bytes,65,opt,name=ProductFamily" json:"ProductFamily,omitempty"`
	Provisioned                   string `protobuf:"bytes,66,opt,name=Provisioned" json:"Provisioned,omitempty"`
	Region                        string `protobuf:"bytes,67,opt,name=Region" json:"Region,omitempty"`
	Servicecode                   string `protobuf:"bytes,68,opt,name=Servicecode" json:"Servicecode,omitempty"`
	Servicename                   string `protobuf:"bytes,69,opt,name=Servicename" json:"Servicename,omitempty"`
	Sku                           string `protobuf:"bytes,70,opt,name=Sku" json:"Sku,omitempty"`
	Storage                       string `protobuf:"bytes,71,opt,name=Storage" json:"Storage,omitempty"`
	StorageClass                  string `protobuf:"bytes,72,opt,name=StorageClass" json:"StorageClass,omitempty"`
	StorageMedia                  string `protobuf:"bytes,73,opt,name=StorageMedia" json:"StorageMedia,omitempty"`
	Tenancy                       string `protobuf:"bytes,74,opt,name=Tenancy" json:"Tenancy,omitempty"`
	ToLocation                    string `protobuf:"bytes,75,opt,name=ToLocation" json:"ToLocation,omitempty"`
	ToLocationType                string `protobuf:"bytes,76,opt,name=ToLocationType" json:"ToLocationType,omitempty"`
	TransferType                  string `protobuf:"bytes,77,opt,name=TransferType" json:"TransferType,omitempty"`
	Usagetype                     string `protobuf:"bytes,78,opt,name=Usagetype" json:"Usagetype,omitempty"`
	Vcpu                          string `protobuf:"bytes,79,opt,name=Vcpu" json:"Vcpu,omitempty"`
	VolumeType                    string `protobuf:"bytes,80,opt,name=VolumeType" json:"VolumeType,omitempty"`
}

func (m *LineItem) Reset()                    { *m = LineItem{} }
func (m *LineItem) String() string            { return proto.CompactTextString(m) }
func (*LineItem) ProtoMessage()               {}
func (*LineItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LineItem) GetIdentityLineItemID() string {
	if m != nil {
		return m.IdentityLineItemID
	}
	return ""
}

func (m *LineItem) GetIdentityTimeInterval() string {
	if m != nil {
		return m.IdentityTimeInterval
	}
	return ""
}

func (m *LineItem) GetBillInvoiceID() string {
	if m != nil {
		return m.BillInvoiceID
	}
	return ""
}

func (m *LineItem) GetBillBillingEntity() string {
	if m != nil {
		return m.BillBillingEntity
	}
	return ""
}

func (m *LineItem) GetBillBillType() string {
	if m != nil {
		return m.BillBillType
	}
	return ""
}

func (m *LineItem) GetBillPayerAccountID() string {
	if m != nil {
		return m.BillPayerAccountID
	}
	return ""
}

func (m *LineItem) GetBillBillingPeriodStartDate() string {
	if m != nil {
		return m.BillBillingPeriodStartDate
	}
	return ""
}

func (m *LineItem) GetBillBillingPeriodEndDate() string {
	if m != nil {
		return m.BillBillingPeriodEndDate
	}
	return ""
}

func (m *LineItem) GetLineItemUsageAccountID() string {
	if m != nil {
		return m.LineItemUsageAccountID
	}
	return ""
}

func (m *LineItem) GetLineItemLineItemType() string {
	if m != nil {
		return m.LineItemLineItemType
	}
	return ""
}

func (m *LineItem) GetLineItemUsageStartDate() string {
	if m != nil {
		return m.LineItemUsageStartDate
	}
	return ""
}

func (m *LineItem) GetLineItemUsageEndDate() string {
	if m != nil {
		return m.LineItemUsageEndDate
	}
	return ""
}

func (m *LineItem) GetLineItemProductCode() string {
	if m != nil {
		return m.LineItemProductCode
	}
	return ""
}

func (m *LineItem) GetLineItemUsageType() string {
	if m != nil {
		return m.LineItemUsageType
	}
	return ""
}

func (m *LineItem) GetLineItemOperation() string {
	if m != nil {
		return m.LineItemOperation
	}
	return ""
}

func (m *LineItem) GetLineItemAvailabilityZone() string {
	if m != nil {
		return m.LineItemAvailabilityZone
	}
	return ""
}

func (m *LineItem) GetLineItemResourceID() string {
	if m != nil {
		return m.LineItemResourceID
	}
	return ""
}

func (m *LineItem) GetLineItemUsageAmount() string {
	if m != nil {
		return m.LineItemUsageAmount
	}
	return ""
}

func (m *LineItem) GetLineItemNormalizationFactor() string {
	if m != nil {
		return m.LineItemNormalizationFactor
	}
	return ""
}

func (m *LineItem) GetLineItemNormalizedUsageAmount() string {
	if m != nil {
		return m.LineItemNormalizedUsageAmount
	}
	return ""
}

func (m *LineItem) GetLineItemCurrencyCode() string {
	if m != nil {
		return m.LineItemCurrencyCode
	}
	return ""
}

func (m *LineItem) GetLineItemUnblendedRate() string {
	if m != nil {
		return m.LineItemUnblendedRate
	}
	return ""
}

func (m *LineItem) GetLineItemUnblendedCost() string {
	if m != nil {
		return m.LineItemUnblendedCost
	}
	return ""
}

func (m *LineItem) GetLineItemBlendedRate() string {
	if m != nil {
		return m.LineItemBlendedRate
	}
	return ""
}

func (m *LineItem) GetLineItemBlendedCost() string {
	if m != nil {
		return m.LineItemBlendedCost
	}
	return ""
}

func (m *LineItem) GetLineItemLineItemDescription() string {
	if m != nil {
		return m.LineItemLineItemDescription
	}
	return ""
}

func (m *LineItem) GetLineItemTaxType() string {
	if m != nil {
		return m.LineItemTaxType
	}
	return ""
}

func (m *LineItem) GetNormalizedUnitsPerReservation() string {
	if m != nil {
		return m.NormalizedUnitsPerReservation
	}
	return ""
}

func (m *LineItem) GetTotalReservedNormalizedUnits() string {
	if m != nil {
		return m.TotalReservedNormalizedUnits
	}
	return ""
}

func (m *LineItem) GetTotalReservedUnits() string {
	if m != nil {
		return m.TotalReservedUnits
	}
	return ""
}

func (m *LineItem) GetUnitsPerReservation() string {
	if m != nil {
		return m.UnitsPerReservation
	}
	return ""
}

func (m *LineItem) GetPublicOnDemandCost() string {
	if m != nil {
		return m.PublicOnDemandCost
	}
	return ""
}

func (m *LineItem) GetPublicOnDemandRate() string {
	if m != nil {
		return m.PublicOnDemandRate
	}
	return ""
}

func (m *LineItem) GetTerm() string {
	if m != nil {
		return m.Term
	}
	return ""
}

func (m *LineItem) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *LineItem) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *LineItem) GetAvailability() string {
	if m != nil {
		return m.Availability
	}
	return ""
}

func (m *LineItem) GetClockSpeed() string {
	if m != nil {
		return m.ClockSpeed
	}
	return ""
}

func (m *LineItem) GetCurrentGeneration() string {
	if m != nil {
		return m.CurrentGeneration
	}
	return ""
}

func (m *LineItem) GetDurability() string {
	if m != nil {
		return m.Durability
	}
	return ""
}

func (m *LineItem) GetEcu() string {
	if m != nil {
		return m.Ecu
	}
	return ""
}

func (m *LineItem) GetFromLocation() string {
	if m != nil {
		return m.FromLocation
	}
	return ""
}

func (m *LineItem) GetFromLocationType() string {
	if m != nil {
		return m.FromLocationType
	}
	return ""
}

func (m *LineItem) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *LineItem) GetGroupDescription() string {
	if m != nil {
		return m.GroupDescription
	}
	return ""
}

func (m *LineItem) GetInstanceFamily() string {
	if m != nil {
		return m.InstanceFamily
	}
	return ""
}

func (m *LineItem) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *LineItem) GetInstanceTypeFamily() string {
	if m != nil {
		return m.InstanceTypeFamily
	}
	return ""
}

func (m *LineItem) GetLicenseModel() string {
	if m != nil {
		return m.LicenseModel
	}
	return ""
}

func (m *LineItem) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *LineItem) GetLocationType() string {
	if m != nil {
		return m.LocationType
	}
	return ""
}

func (m *LineItem) GetMaxIopsBurstPerformance() string {
	if m != nil {
		return m.MaxIopsBurstPerformance
	}
	return ""
}

func (m *LineItem) GetMaxIopsvolume() string {
	if m != nil {
		return m.MaxIopsvolume
	}
	return ""
}

func (m *LineItem) GetMaxThroughputvolume() string {
	if m != nil {
		return m.MaxThroughputvolume
	}
	return ""
}

func (m *LineItem) GetMaxVolumeSize() string {
	if m != nil {
		return m.MaxVolumeSize
	}
	return ""
}

func (m *LineItem) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

func (m *LineItem) GetNetworkPerformance() string {
	if m != nil {
		return m.NetworkPerformance
	}
	return ""
}

func (m *LineItem) GetNormalizationSizeFactor() string {
	if m != nil {
		return m.NormalizationSizeFactor
	}
	return ""
}

func (m *LineItem) GetOperatingSystem() string {
	if m != nil {
		return m.OperatingSystem
	}
	return ""
}

func (m *LineItem) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *LineItem) GetPhysicalProcessor() string {
	if m != nil {
		return m.PhysicalProcessor
	}
	return ""
}

func (m *LineItem) GetPreInstalledSw() string {
	if m != nil {
		return m.PreInstalledSw
	}
	return ""
}

func (m *LineItem) GetProcessorArchitecture() string {
	if m != nil {
		return m.ProcessorArchitecture
	}
	return ""
}

func (m *LineItem) GetProcessorFeatures() string {
	if m != nil {
		return m.ProcessorFeatures
	}
	return ""
}

func (m *LineItem) GetProductFamily() string {
	if m != nil {
		return m.ProductFamily
	}
	return ""
}

func (m *LineItem) GetProvisioned() string {
	if m != nil {
		return m.Provisioned
	}
	return ""
}

func (m *LineItem) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *LineItem) GetServicecode() string {
	if m != nil {
		return m.Servicecode
	}
	return ""
}

func (m *LineItem) GetServicename() string {
	if m != nil {
		return m.Servicename
	}
	return ""
}

func (m *LineItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *LineItem) GetStorage() string {
	if m != nil {
		return m.Storage
	}
	return ""
}

func (m *LineItem) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

func (m *LineItem) GetStorageMedia() string {
	if m != nil {
		return m.StorageMedia
	}
	return ""
}

func (m *LineItem) GetTenancy() string {
	if m != nil {
		return m.Tenancy
	}
	return ""
}

func (m *LineItem) GetToLocation() string {
	if m != nil {
		return m.ToLocation
	}
	return ""
}

func (m *LineItem) GetToLocationType() string {
	if m != nil {
		return m.ToLocationType
	}
	return ""
}

func (m *LineItem) GetTransferType() string {
	if m != nil {
		return m.TransferType
	}
	return ""
}

func (m *LineItem) GetUsagetype() string {
	if m != nil {
		return m.Usagetype
	}
	return ""
}

func (m *LineItem) GetVcpu() string {
	if m != nil {
		return m.Vcpu
	}
	return ""
}

func (m *LineItem) GetVolumeType() string {
	if m != nil {
		return m.VolumeType
	}
	return ""
}

func init() {
	proto.RegisterType((*LineItem)(nil), "LineItem")
}

func init() { proto.RegisterFile("aws-pricing.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x57, 0x5b, 0x73, 0xdb, 0x36,
	0x13, 0x9d, 0x7c, 0xb9, 0x23, 0x77, 0xe4, 0x86, 0x2f, 0xb7, 0xba, 0x6e, 0x9a, 0xba, 0x69, 0xe2,
	0xa6, 0x49, 0x9a, 0xa6, 0x69, 0x9b, 0xc6, 0x96, 0x6c, 0x57, 0xad, 0x65, 0x6b, 0x2c, 0x35, 0x0f,
	0x7d, 0x83, 0xc9, 0x8d, 0x8c, 0x31, 0x09, 0x68, 0x40, 0x50, 0xb6, 0xf2, 0x83, 0xfb, 0x3b, 0x3a,
	0xbb, 0x20, 0x25, 0x50, 0xa4, 0xfc, 0xe0, 0x11, 0x70, 0xce, 0xd9, 0xc5, 0x02, 0xbb, 0x58, 0xd0,
	0xec, 0x86, 0x3c, 0xca, 0x9e, 0x8f, 0xac, 0x8a, 0x94, 0x1e, 0xae, 0x8e, 0xac, 0x71, 0x66, 0xf9,
	0xdf, 0x7b, 0xec, 0xc2, 0xb6, 0xd2, 0xd0, 0x71, 0x90, 0xf2, 0x55, 0xc6, 0x3b, 0x31, 0x68, 0xa7,
	0xdc, 0xa4, 0xc4, 0x3a, 0x6d, 0x71, 0x6a, 0xe9, 0xd4, 0xca, 0xc5, 0xbd, 0x06, 0x86, 0xbf, 0x64,
	0xb7, 0x4a, 0x74, 0xa0, 0x52, 0xe8, 0x68, 0x07, 0x76, 0x2c, 0x13, 0xf1, 0x3f, 0xb2, 0x68, 0xe4,
	0xf8, 0x63, 0x76, 0x65, 0x5d, 0x25, 0x49, 0x47, 0x8f, 0x8d, 0x8a, 0xa0, 0xd3, 0x16, 0xa7, 0x49,
	0x5c, 0x05, 0xf9, 0x33, 0x76, 0x03, 0x01, 0xfc, 0x53, 0x7a, 0xb8, 0x41, 0x6e, 0xc4, 0x19, 0x52,
	0xd6, 0x09, 0xbe, 0xcc, 0x2e, 0x97, 0xe0, 0x60, 0x32, 0x02, 0x71, 0x96, 0x84, 0x15, 0x0c, 0xf7,
	0x86, 0xe3, 0x9e, 0x9c, 0x80, 0x5d, 0x8b, 0x22, 0x93, 0x6b, 0xd7, 0x69, 0x8b, 0x73, 0x7e, 0x6f,
	0x75, 0x86, 0xbf, 0x67, 0xf7, 0x82, 0x85, 0x7a, 0x60, 0x95, 0x89, 0xfb, 0x4e, 0x5a, 0xd7, 0x96,
	0x0e, 0xc4, 0x79, 0xb2, 0x3b, 0x41, 0xc1, 0xdf, 0x31, 0x51, 0x63, 0x37, 0x74, 0x4c, 0xd6, 0x17,
	0xc8, 0x7a, 0x21, 0xcf, 0xdf, 0xb0, 0x3b, 0xe5, 0x29, 0xff, 0x9d, 0xc9, 0x21, 0xcc, 0xe2, 0xbd,
	0x48, 0x96, 0x0b, 0x58, 0xcc, 0x47, 0xc9, 0x94, 0xbf, 0x74, 0x1e, 0xcc, 0xe7, 0xa3, 0x89, 0xab,
	0xad, 0x35, 0xdb, 0xe3, 0xa5, 0x86, 0xb5, 0x66, 0xfb, 0x0b, 0xd6, 0x22, 0xa6, 0xdc, 0xdb, 0xe5,
	0xea, 0x5a, 0x21, 0xc7, 0x5f, 0xb0, 0x9b, 0x25, 0xde, 0xb3, 0x26, 0xce, 0x23, 0xd7, 0x32, 0x31,
	0x88, 0x2b, 0x64, 0xd2, 0x44, 0x61, 0x1d, 0x54, 0x3c, 0xd1, 0x76, 0xae, 0xfa, 0x3a, 0xa8, 0x11,
	0xa1, 0x7a, 0x77, 0x04, 0x56, 0x3a, 0x65, 0xb4, 0xb8, 0x56, 0x55, 0x4f, 0x09, 0xcc, 0x50, 0x09,
	0xae, 0x8d, 0xa5, 0x4a, 0xe4, 0xbe, 0x4a, 0x94, 0x9b, 0xfc, 0x63, 0x34, 0x88, 0xeb, 0x3e, 0x43,
	0x8b, 0x78, 0xac, 0xa6, 0x92, 0xdb, 0x83, 0xcc, 0xe4, 0x96, 0x4a, 0xf9, 0x86, 0xaf, 0xa6, 0x3a,
	0x13, 0xee, 0xdc, 0xe7, 0x2c, 0xc5, 0x94, 0x09, 0x5e, 0xdd, 0x79, 0x40, 0xf1, 0x0f, 0xec, 0x7e,
	0x09, 0xef, 0x18, 0x9b, 0xca, 0x44, 0x7d, 0xa6, 0xb0, 0x37, 0x65, 0xe4, 0x8c, 0x15, 0x37, 0xc9,
	0xf2, 0x24, 0x09, 0x6f, 0xb3, 0x87, 0xf3, 0x34, 0xc4, 0xe1, 0xea, 0xb7, 0xc8, 0xc7, 0xc9, 0xa2,
	0x30, 0xcf, 0xad, 0xdc, 0x5a, 0xd0, 0xd1, 0x84, 0x92, 0x76, 0xbb, 0x9a, 0xe7, 0x90, 0xe3, 0xaf,
	0xd9, 0xed, 0xe9, 0x96, 0xf4, 0x7e, 0x02, 0x3a, 0x86, 0x78, 0x0f, 0x8b, 0xe3, 0x0e, 0x19, 0x35,
	0x93, 0x8d, 0x56, 0x2d, 0x93, 0x39, 0x71, 0x77, 0x81, 0x15, 0x92, 0xe1, 0xc9, 0xae, 0x07, 0x2b,
	0x89, 0xea, 0xc9, 0x06, 0x54, 0x83, 0x05, 0xad, 0xf2, 0xff, 0x46, 0x0b, 0x5a, 0x23, 0xc8, 0x45,
	0xf9, 0xdb, 0x86, 0x2c, 0xb2, 0x6a, 0x44, 0x15, 0x76, 0xaf, 0x9a, 0x8b, 0x06, 0x09, 0x5f, 0x61,
	0xd7, 0xa6, 0xb7, 0x4e, 0x1e, 0x53, 0x15, 0xdf, 0x27, 0xab, 0x79, 0x18, 0xb3, 0x16, 0x24, 0x42,
	0x2b, 0x97, 0xf5, 0xc0, 0xee, 0x41, 0x86, 0xdd, 0x93, 0x56, 0x7b, 0xe0, 0xb3, 0x76, 0xa2, 0x88,
	0xaf, 0xb3, 0x07, 0x03, 0xe3, 0x64, 0xe2, 0x31, 0x88, 0xe7, 0xd4, 0xe2, 0x21, 0x39, 0x39, 0x51,
	0x83, 0x35, 0x5e, 0xe1, 0xbd, 0xe5, 0x23, 0x5f, 0xe3, 0x75, 0x06, 0xcf, 0xb5, 0x29, 0xde, 0x2f,
	0xfc, 0xb9, 0x36, 0x45, 0xb9, 0xca, 0x78, 0x2f, 0xdf, 0x4f, 0x54, 0xb4, 0xab, 0xdb, 0x90, 0x4a,
	0xed, 0x13, 0xb1, 0xe4, 0x57, 0xa8, 0x33, 0x75, 0x3d, 0xa5, 0xfa, 0xcb, 0x26, 0x3d, 0x65, 0x9a,
	0xb3, 0x33, 0x03, 0xb0, 0xa9, 0x58, 0x26, 0x05, 0x8d, 0x11, 0xc3, 0x50, 0xc4, 0x57, 0x1e, 0xc3,
	0x31, 0x5f, 0x62, 0x97, 0x8a, 0xa6, 0xb3, 0x23, 0x53, 0x10, 0x8f, 0x89, 0x0a, 0x21, 0x7c, 0x61,
	0xc2, 0x1e, 0x20, 0xbe, 0xf6, 0x2f, 0x4c, 0x88, 0xf1, 0x47, 0x8c, 0xb5, 0x12, 0x13, 0x1d, 0xf6,
	0x47, 0x00, 0xb1, 0x78, 0x42, 0x8a, 0x00, 0xc1, 0xee, 0xe4, 0x6f, 0x89, 0xdb, 0x02, 0x5d, 0x76,
	0xa7, 0x6f, 0x7c, 0x77, 0xaa, 0x11, 0xe8, 0xad, 0x9d, 0xdb, 0x72, 0xbd, 0x15, 0xef, 0x6d, 0x86,
	0xf0, 0xeb, 0xec, 0xf4, 0x46, 0x94, 0x8b, 0x6f, 0x89, 0xc0, 0x21, 0xc6, 0xb8, 0x69, 0x4d, 0xba,
	0x6d, 0x22, 0xef, 0xfa, 0xa9, 0x8f, 0x31, 0xc4, 0xf8, 0x53, 0x76, 0x3d, 0x9c, 0x53, 0x21, 0x7e,
	0x47, 0xba, 0x1a, 0xce, 0x6f, 0xb1, 0xb3, 0x5b, 0xd6, 0xe4, 0x23, 0xf1, 0x8c, 0x04, 0x7e, 0x82,
	0x1e, 0x68, 0x10, 0x5e, 0x80, 0xe7, 0xde, 0xc3, 0x3c, 0xce, 0x9f, 0xb0, 0xab, 0x1d, 0x9d, 0x39,
	0xa9, 0x23, 0xd8, 0x94, 0xa9, 0x4a, 0x26, 0x62, 0x95, 0x94, 0x73, 0x28, 0x46, 0x5e, 0x22, 0x14,
	0xd1, 0xf7, 0x3e, 0xf2, 0x10, 0xa3, 0x6f, 0x93, 0x60, 0x5e, 0xf8, 0x7b, 0x51, 0x7c, 0x9b, 0xd4,
	0x18, 0xf4, 0xb9, 0xad, 0x22, 0xd0, 0x19, 0x74, 0x4d, 0x0c, 0x89, 0xf8, 0xc1, 0xfb, 0x0c, 0x31,
	0x8e, 0xdf, 0x3e, 0xe5, 0x69, 0xbd, 0x24, 0x7e, 0x3a, 0x27, 0xfb, 0xf0, 0x94, 0x5e, 0x15, 0xf6,
	0xe1, 0x09, 0xbd, 0x65, 0x77, 0xbb, 0xf2, 0xb8, 0x63, 0x46, 0xd9, 0x7a, 0x6e, 0x33, 0xd7, 0x03,
	0xfb, 0x09, 0xef, 0x90, 0x8e, 0x40, 0xbc, 0x26, 0xf9, 0x22, 0x1a, 0xbf, 0x82, 0x0a, 0x6a, 0x6c,
	0x92, 0x3c, 0x05, 0xf1, 0xa3, 0xff, 0x0a, 0xaa, 0x80, 0x78, 0xa3, 0xba, 0xf2, 0x78, 0x70, 0x60,
	0x4d, 0x3e, 0x3c, 0x18, 0xe5, 0xae, 0xd0, 0xbe, 0xf1, 0x37, 0xaa, 0x81, 0x2a, 0xfc, 0x7e, 0xa4,
	0x49, 0x5f, 0x7d, 0x06, 0xf1, 0xd3, 0xd4, 0xef, 0x0c, 0xe4, 0x77, 0xd8, 0xb9, 0x2e, 0xa4, 0xc6,
	0x4e, 0xc4, 0x5b, 0xa2, 0x8b, 0x19, 0x9e, 0xf1, 0x0e, 0xb8, 0x23, 0x63, 0x0f, 0xc3, 0xad, 0xfc,
	0xec, 0xcf, 0xb8, 0xce, 0xe0, 0xfe, 0x2b, 0x0f, 0x0f, 0x3a, 0x2f, 0xde, 0xa7, 0x77, 0x7e, 0xff,
	0x0b, 0x68, 0xec, 0x87, 0xc5, 0x43, 0xac, 0x87, 0xfd, 0x49, 0xe6, 0x20, 0x15, 0xbf, 0xf8, 0x7e,
	0x38, 0x07, 0xf3, 0x07, 0xec, 0xe2, 0xec, 0x2d, 0xff, 0x95, 0x34, 0x33, 0x00, 0xef, 0x54, 0xef,
	0x60, 0x92, 0xa9, 0x48, 0x26, 0x3d, 0x6b, 0x22, 0xc8, 0x32, 0x63, 0xc5, 0x6f, 0xfe, 0x4e, 0xd5,
	0x08, 0xac, 0xc7, 0x9e, 0x05, 0x2a, 0x96, 0x24, 0x81, 0xb8, 0x7f, 0x24, 0xde, 0xfb, 0x7a, 0xac,
	0xa2, 0xf8, 0x12, 0x4d, 0x8d, 0xd6, 0x6c, 0x74, 0xa0, 0x1c, 0x44, 0x2e, 0xb7, 0x20, 0x7e, 0xf7,
	0x2f, 0x51, 0x23, 0x49, 0xb1, 0x94, 0xc4, 0x26, 0x48, 0xc4, 0x32, 0xf1, 0xa1, 0x88, 0x65, 0x9e,
	0xc0, 0x4c, 0x15, 0x0d, 0xa6, 0x28, 0xe5, 0x35, 0x9f, 0xa9, 0x0a, 0x58, 0x74, 0xa6, 0xb1, 0xca,
	0x94, 0xd1, 0x10, 0x8b, 0xf5, 0x69, 0x67, 0x2a, 0x21, 0xcc, 0xe5, 0x1e, 0x0c, 0xf1, 0x70, 0x5a,
	0x3e, 0x97, 0x7e, 0x86, 0x96, 0x7d, 0xb0, 0x63, 0x15, 0x41, 0x84, 0xcf, 0x75, 0xdb, 0x5b, 0x06,
	0x50, 0xa0, 0xd0, 0xd8, 0xf5, 0x36, 0x2a, 0x0a, 0x84, 0xb0, 0xc7, 0xf4, 0x0f, 0x73, 0xb1, 0xe9,
	0x7b, 0x4c, 0xff, 0x30, 0xe7, 0x82, 0x9d, 0xef, 0x3b, 0x63, 0xe5, 0x10, 0xc4, 0x16, 0xa1, 0xe5,
	0x14, 0xef, 0x4b, 0x31, 0x6c, 0x25, 0x32, 0xcb, 0xc4, 0x1f, 0xfe, 0xbe, 0x84, 0x58, 0xa0, 0xe9,
	0x42, 0xac, 0xa4, 0xe8, 0x54, 0x34, 0x84, 0xe1, 0x0a, 0x03, 0xd0, 0x52, 0x47, 0x13, 0xf1, 0xa7,
	0x5f, 0xa1, 0x98, 0x62, 0x47, 0x1c, 0x98, 0xe9, 0x7d, 0xfd, 0xcb, 0x77, 0xc4, 0x19, 0x82, 0xd9,
	0x9d, 0xcd, 0xe8, 0xce, 0x6e, 0xfb, 0xec, 0x56, 0x51, 0x8c, 0x62, 0x60, 0xa5, 0xce, 0x3e, 0x81,
	0x25, 0x55, 0xd7, 0x47, 0x11, 0x62, 0x58, 0x75, 0xf4, 0x11, 0xe4, 0x50, 0xb0, 0xe3, 0xab, 0x6e,
	0x0a, 0xe0, 0x1b, 0xf2, 0x31, 0x1a, 0xe5, 0x62, 0xd7, 0xbf, 0x21, 0x38, 0xc6, 0xe8, 0xfc, 0x0d,
	0x23, 0x9f, 0x3d, 0x1f, 0xdd, 0x0c, 0xd9, 0x3f, 0x47, 0xff, 0x6f, 0xbd, 0xfa, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0x39, 0x25, 0x13, 0x74, 0x84, 0x0d, 0x00, 0x00,
}
